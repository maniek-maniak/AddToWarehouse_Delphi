unit UnitAddToWarehouse;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DBXpress, FMTBcd, DB, SqlExpr, StdCtrls, ComCtrls;

type
  TFormAddToWarehouse = class(TForm)
    btnConnect: TButton;
    ListView: TListView;
    btnConfirmDelivery: TButton;
    MySQL: TSQLConnection;
    SQL: TSQLDataSet;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    InputIndex: TEdit;
    Label2: TLabel;
    InputShortName: TEdit;
    Label3: TLabel;
    InputFullName: TEdit;
    Label4: TLabel;
    InputOrderNumber: TEdit;
    GroupBox2: TGroupBox;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    Label9: TLabel;
    Edit9: TEdit;
    Label10: TLabel;
    Edit10: TEdit;
    procedure btnConnectClick(Sender: TObject);
    procedure MySQLAfterConnect(Sender: TObject);
    procedure MySQLAfterDisconnect(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    { Private declarations }
    Connected : Boolean;
    procedure LoadTable;
  public
    { Public declarations }
  end;

type
  TIndeks = Record
   Indeks: String[18];
     NazwaKrotka: String[191];
      NazwaPelna: String[191];
       Jednostka: String[5];
    end;
var

Indeksy: array of TIndeks;     //  MATRIX
 Indeks_Rekord: TIndeks;

var
  FormAddToWarehouse: TFormAddToWarehouse;

implementation

{$R *.dfm}

procedure TFormAddToWarehouse.btnConnectClick(Sender: TObject);
begin
  if Connected then Connected := False else Connected := True;
  MySQL.Connected := True;
end;

procedure TFormAddToWarehouse.MySQLAfterConnect(Sender: TObject);
begin
  btnConnect.Caption := 'Wyszukiwanie';
  btnConnect.Enabled := False;
  LoadTable;
end;

procedure TFormAddToWarehouse.MySQLAfterDisconnect(Sender: TObject);
begin
  btnConnect.Caption := 'Wyszukaj';
  btnConnect.Enabled := True;
end;

procedure TFormAddToWarehouse.FormClose(Sender: TObject; var Action: TCloseAction);
begin
// podczas zamkniêcia programu - roz³¹czenie z serwerem
  MySQL.Connected := False;
end;

procedure TFormAddToWarehouse.LoadTable;
var
  i : Integer;
  ListItem : TListItem;
begin
  ListView.Items.Clear;
  SQL.CommandText := Format('SELECT indeksy.indeks, indeksy.nazwa_krotka, indeksy.nazwa_pelna, indeksy.jednostka FROM indeksy WHERE indeks LIKE "%s" AND nazwa_krotka LIKE "%s"',
  ['%'+ FormAddToWarehouse.InputIndex.Text +'%', '%'+ FormAddToWarehouse.InputShortName.Text +'%']);

  SQL.Open; // odczytaj dane

  for I := 1 to SQL.RecordCount do
  begin
    Indeks_Rekord.Indeks:= SQL.FieldValues['indeks']; 
  { dodaj kolejne wartoœci }
    ListItem := ListView.Items.Add;
    ListItem.Caption := IntToStr(I);
    ListItem.SubItems.Add(SQL.FieldValues['indeks']);
    ListItem.SubItems.Add(SQL.FieldValues['nazwa_krotka']);
    ListItem.SubItems.Add(SQL.FieldValues['nazwa_pelna']);
    SQL.Next;
  end;

  SQL.Close;

  SQL.CommandText := Format('SELECT pozycje_zapotrzebowania_materialowego.nr_indeksu FROM pozycje_zapotrzebowania_materialowego WHERE pozycje_zapotrzebowania_materialowego.nr_zapotrzebowania_materialowego LIKE "%s"',
  [FormAddToWarehouse.InputOrderNumber.Text]);

  SQL.Open; // odczytaj dane

  for I := 1 to SQL.RecordCount do
  begin
  { dodaj kolejne wartoœci }
    ListItem := ListView.Items.Add;
    ListItem.Caption := IntToStr(I);
    ListItem.SubItems.Add(SQL.FieldValues['nr_indeksu']);
//    ListItem.SubItems.Add(SQL.FieldValues['nazwa_krotka']);
//    ListItem.SubItems.Add(SQL.FieldValues['nazwa_pelna']);
    SQL.Next;
  end;

  SQL.Close;

  MySQL.Connected := False;
end;

end.
